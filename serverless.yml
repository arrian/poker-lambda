service: poker
frameworkVersion: "3"
custom:
  dynamodb:
    stages:
      - test
      - dev
    start:
      port: 8001
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
  dotenv:
    exclude:
      - AWS_REGION
      - AWS_ACCESS_KEY
      - AWS_SECRET_ACCESS_KEY
      - DYNAMODB_ENDPOINT
      - GATEWAY_ENDPOINT

provider:
  name: aws
  runtime: nodejs16.x
  websocketsApiRouteSelectionExpression: $request.body.route
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ PokerTable, Arn ]


plugins:
  - serverless-dynamodb-local
  - serverless-plugin-existing-s3
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-offline
resources:
  Resources:
    PokerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: tableId
            AttributeType: S
        KeySchema:
          - AttributeName: tableId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: pokerTable
functions:
  ping:
    handler: src/functions/handler.ping
  websocket:
   handler: src/functions/handler.websocket
   events:
     - websocket:
         route: $connect
     - websocket:
         route: $disconnect
     - websocket:
         route: list
     - websocket:
         route: start
     - websocket:
         route: join
     - websocket:
         route: leave
     - websocket:
         route: action
package:
  patterns:
    - '!node_modules/**'
    - 'node_modules/cuid/**'
    - 'node_modules/colors/**'
    - 'node_modules/lodash/**'
    - 'node_modules/events/**'
